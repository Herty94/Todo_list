{"version":3,"sources":["components/ToDoItem.tsx","helpers/mockFunctions.ts","components/NewItemForm.tsx","components/List.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["RemoveButton","st","Button","Title","styled","h2","Note","p","DoneButton","BackButton","Div","div","props","isDone","DeadlineDate","diffinH","ToDoItem","date1","Date","Difference_In_Time","date","getTime","Difference_In_Days","Math","floor","Difference_In_Hours","round","className","done","Container","title","note","onClick","onDelButtonClick","onBackButtonClick","onDoneButtonClick","postData","url","data","axios","post","then","console","log","putData","put","deleteData","delete","method","catch","err","message","NewItemForm","useForm","register","handleSubmit","reset","useState","errMessage","setMessage","map","index","onSubmit","response","JoiSchema","Joi","object","string","required","max","allow","optional","alternatives","conditional","is","otherwise","greater","boolean","options","abortEarly","validate","validateData","error","details","formFun","Input","type","placeholder","TextareaAutosize","maxRows","value","disableUnderline","h1","List","randomBytes","dataChange","setData","filter","setFilter","input","setInput","itemUrl","process","loading","setLoading","useEffect","get","res","useFetchGET","items","mapRender","item","id","handleDelete","changeDone","newItem","ToggleButtonGroup","exclusive","onChange","event","color","ToggleButton","target","includes","renderedItems","Header","header","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ef0d3833.chunk.js","sourcesContent":["import { Container, Button } from \"@mui/material\";\r\nimport styled from \"styled-components\";\r\nimport st from \"@mui/material/styles/styled\";\r\nimport { MouseEventHandler } from 'react'\r\nimport { Item } from \"../helpers/mockFunctions\";\r\n\r\n\r\nconst RemoveButton = st(Button)`\r\n  color: #c70000;\r\n  background-color:#e38f8f ;\r\n  `;\r\n\r\n\r\nconst Title = styled.h2`\r\n    text-align: left;\r\n    color: #d44d2f;\r\n    font-weight: 700;\r\n    font-size:1.2rem\r\n  `;\r\nconst Note = styled.p`\r\n    text-align: left;\r\n    font-size: 1rem;\r\n    color: #8a8a8a;\r\n  `;\r\nconst DoneButton = st(Button)`\r\n  background-color: lightgreen;\r\n  `;\r\n\r\nconst BackButton = st(Button)`\r\n  background-color: lightblue;\r\n  `;\r\n\r\n\r\n\r\n\r\ntype Props = { isDone: boolean };\r\ntype DiffProbe = { diffinH: number };\r\n\r\nconst Div = styled.div`\r\n  width:100%;\r\n  display:flex;\r\n  background-color: ${(props: Props) => props.isDone === true ? \"#f1dbff\" : \"white\"};\r\n  border-top-left-radius: 0.375rem;\r\n  border-bottom-left-radius  0.375rem;\r\n  padding-top: 0.5rem;\r\n  padding-bottom: 0.5rem;\r\n  margin:0;\r\n`;\r\n\r\nconst DeadlineDate = styled.p`\r\ncolor: ${(props: DiffProbe) =>\r\n    props.diffinH < 48 ? \"rgb(150,\" + 255 / 48 * props.diffinH + \",0)\" : \"green\"\r\n  };\r\nwidth: 50 %;\r\ntext-align: right;\r\nfont-size: 0.9rem;\r\n`;\r\n\r\ninterface ThisItem extends Item {\r\n  onDelButtonClick: MouseEventHandler<HTMLButtonElement>,\r\n  onBackButtonClick: MouseEventHandler<HTMLButtonElement>,\r\n  onDoneButtonClick: MouseEventHandler<HTMLButtonElement>\r\n}\r\n\r\n\r\n\r\n\r\nconst ToDoItem: React.FC<ThisItem> = (props) => {\r\n  const date1 = new Date();\r\n  const date2 = new Date(props.date);\r\n\r\n  // To calculate the time difference of two dates\r\n  const Difference_In_Time = date2.getTime() - date1.getTime();\r\n\r\n  // To calculate the no. of days between two dates\r\n\r\n  const Difference_In_Days = Math.floor(Difference_In_Time / (1000 * 3600 * 24));\r\n  const Difference_In_Hours = Math.round(Difference_In_Time / (1000 * 3600));\r\n\r\n\r\n  return (\r\n    <div className=\"flex bg-white rounded-md my-4 filter drop-shadow-xl\">\r\n      <Div isDone={props.done}>\r\n        <div className=\"w-full flex-row\">\r\n          <Container>\r\n            <Title>{props.title}</Title>\r\n            <Note>{props.note}</Note>\r\n            <DeadlineDate diffinH={Difference_In_Hours}>\r\n              {props.date && `${Difference_In_Days > 0 ? Difference_In_Days + \"d\" : \" \"}` + (Difference_In_Hours - (24 * Difference_In_Days)) + \"h\"}\r\n            </DeadlineDate>\r\n          </Container>\r\n\r\n        </div>\r\n        <div className=\"flex flex-col\">\r\n          <RemoveButton onClick={props.onDelButtonClick}>X</RemoveButton>\r\n          {props.done ? (\r\n            <BackButton onClick={props.onBackButtonClick}>{\">\"}</BackButton>\r\n          ) : (\r\n            <DoneButton onClick={props.onDoneButtonClick}>O</DoneButton>\r\n          )}\r\n        </div>\r\n      </Div>\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default ToDoItem;","import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nexport interface Item {\r\n  title: string;\r\n  note: string;\r\n  date: Date | string;\r\n  done: boolean;\r\n  id: number;\r\n}\r\n\r\nexport function useFetchGET(url: string, dataChange: Buffer) {\r\n  const [data, setData] = useState([{}]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(url)\r\n      .then((res) => {\r\n        setData(res.data);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        console.log(\"ERROR\" + err.message);\r\n      });\r\n  }, [url, dataChange]);\r\n  return { data, loading };\r\n}\r\n\r\nexport function postData(url: string, data: Item) {\r\n  return axios.post(url, data).then(() => {\r\n    console.log(\"new ToDo item created\");\r\n  });\r\n}\r\n\r\nexport function putData(url: string, data: Item) {\r\n  return axios.put(url, data).then(() => {\r\n    console.log(\"ToDo item changed\" + data.done ? \" to DONE\" : \" to not DONE\");\r\n  });\r\n}\r\n\r\nexport function deleteData(url: string) {\r\n  return axios\r\n    .delete(url, {\r\n      method: \"DELETE\",\r\n    })\r\n    .then(() => {\r\n      console.log(\"ToDo item deleted\");\r\n    })\r\n    .catch((err) => {\r\n      console.log(err.message);\r\n    });\r\n}\r\n","import { TextareaAutosize } from \"@mui/core\";\r\nimport { Input } from \"@mui/material\";\r\nimport Joi from \"joi\";\r\nimport { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { postData, Item } from \"../helpers/mockFunctions\";\r\n\r\n\r\ninterface Url {\r\n    url: string,\r\n    formFun: any\r\n}\r\nfunction validateData(data: Item) {\r\n    const JoiSchema = Joi.object({\r\n        title: Joi.string().required().max(25),\r\n        note: Joi.string().allow(\"\").max(100).optional(),\r\n        date: Joi.alternatives().conditional('date', { is: \"\", then: Joi.string().allow(\"\"), otherwise: Joi.date().greater('now') }).optional(),\r\n        done: Joi.boolean()\r\n    }).options({ abortEarly: false });\r\n    console.log(JoiSchema.validate(data))\r\n    return JoiSchema.validate(data)\r\n}\r\n\r\n\r\nconst NewItemForm: React.FC<Url> = (props) => {\r\n    const { register, handleSubmit, reset } = useForm();\r\n    const [errMessage, setMessage] = useState([{}]);\r\n\r\n    function onSubmit(data: Item) {\r\n        data.done = false;\r\n        // data validation and posting\r\n        let response = validateData(data)\r\n        if (response.error) {\r\n            console.log(response.error.details)\r\n            setMessage(response.error.details)\r\n        }\r\n        else {\r\n            console.log(\"Data Validated\")\r\n            setMessage([{}])\r\n\r\n            props.formFun(props.url, data);\r\n            reset();\r\n\r\n        }\r\n    };\r\n    return (\r\n        <>\r\n            {errMessage && errMessage.map((message: any, index) => {\r\n                return (< p className=\"text-red-500\" key={index} > {message.message}</p>)\r\n            })\r\n            }\r\n            <form\r\n                className=\"flex text-black rounded-b-xl m-2 flex-col bg-gray-300\"\r\n                onSubmit={handleSubmit(onSubmit)}\r\n            >\r\n\r\n                <Input\r\n                    {...register(\"title\", { required: true })}\r\n                    type=\"text\"\r\n                    placeholder=\"Title\"\r\n                />\r\n                <TextareaAutosize\r\n                    {...register(\"note\")}\r\n                    className=\"text-base\"\r\n                    placeholder=\"write notes\"\r\n                    maxRows={3}\r\n                />\r\n                <div className=\"flex flex-row\">\r\n                    <label className=\"text-base pr-4 text-gray-500\">Deadline: </label>\r\n                    <Input type=\"datetime-local\" {...register(\"date\")} />\r\n                </div>\r\n                <Input\r\n                    className=\"bg-white rounded-b-xl hover:bg-gray-200\"\r\n                    type=\"submit\"\r\n                    value=\"Create ToDo Item\"\r\n                    disableUnderline={true}\r\n                />\r\n            </form>\r\n        </>);\r\n}\r\n\r\n\r\nexport default NewItemForm;","import { ToggleButtonGroup, Input, ToggleButton } from \"@mui/material\";\r\nimport styled from \"styled-components\";\r\nimport ToDoItem from \"./ToDoItem\";\r\nimport { useFetchGET, putData, Item, postData } from \"../helpers/mockFunctions\";\r\nimport React, { useState } from \"react\";\r\nimport { deleteData } from \"../helpers/mockFunctions\";\r\nimport { randomBytes } from \"crypto\";\r\nimport NewItemForm from \"./NewItemForm\";\r\nimport { createLogicalAnd } from \"typescript\";\r\n\r\n\r\n\r\n\r\n//styled components\r\nconst Title = styled.h1`\r\nfont-size: 1.2em;\r\ntext-align: center;\r\ncolor: palevioletred;\r\nfont-weight: 900;\r\n`;\r\n\r\n\r\n\r\nconst List: React.FC = () => {\r\n  const [dataChange, setData] = useState(randomBytes(16));\r\n  const [filter, setFilter] = useState(-1);\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  // geting data from mockapi.io using custom hook\r\n  const itemUrl = process.env.REACT_APP_API_URL + '/items'\r\n  const { data: items, loading } = useFetchGET(\r\n    itemUrl,\r\n    dataChange\r\n  );\r\n\r\n  const mapRender = (item: any) => {\r\n    return (\r\n      <ToDoItem\r\n        title={item.title}\r\n        note={item.note}\r\n        date={item.date}\r\n        done={item.done}\r\n        id={item.id}\r\n        key={`item-${item.id}`}\r\n        onDelButtonClick={() =>\r\n          handleDelete(itemUrl, item.id)\r\n        }\r\n        onBackButtonClick={() =>\r\n          changeDone(itemUrl, item.id, item, false)\r\n        }\r\n        onDoneButtonClick={() =>\r\n          changeDone(itemUrl, item.id, item, true)\r\n        }\r\n      />\r\n    )\r\n  };\r\n  const renderedItems = () => {\r\n    if (items)\r\n      if (filter >= 0) {\r\n        return items.filter((item: any) => item.done == filter).map((item: any) => {\r\n          if (input !== \"\") {\r\n            if (item.title.includes(input))\r\n              return mapRender(item)\r\n          }\r\n          else\r\n            return mapRender(item)\r\n        })\r\n      }\r\n      else\r\n        return items.map((item: any) => {\r\n          if (input !== \"\") {\r\n            if (item.title.includes(input))\r\n              return mapRender(item)\r\n          }\r\n          else\r\n            return mapRender(item)\r\n        })\r\n  }\r\n\r\n\r\n\r\n\r\n  // posting data to mockapi.io\r\n\r\n  const handleFilter = (\r\n    event: React.MouseEvent<HTMLElement>,\r\n    value: number\r\n  ) => {\r\n    setFilter(value);\r\n    switch (value) {\r\n      case -1: console.log(\"[All] selected\");\r\n        break;\r\n      case 0: console.log(\"[not Done] selected\");\r\n        break;\r\n      case 1: console.log(\"[Done] selected\");\r\n        break;\r\n      default: console.log(\"Wrong selection\");\r\n        break;\r\n    }\r\n  };\r\n\r\n\r\n\r\n  async function handleDelete(url: string, id: number) {\r\n    await deleteData(url + \"/\" + id);\r\n    setData(randomBytes(16))\r\n\r\n  }\r\n  async function changeDone(url: string, id: number, item: Item, done: boolean) {\r\n    let newItem = { ...item, done: done };\r\n    await putData(url + \"/\" + id, newItem)\r\n    setData(randomBytes(16))\r\n  }\r\n  async function handlePost(url: string, data: Item) {\r\n    await postData(url, data);\r\n    setData(randomBytes(16))\r\n  }\r\n\r\n  return (\r\n\r\n    <div className=\"bg-white object-contain rounded-2xl border-green-400 filter drop-shadow-lg\">\r\n      <div className=\"bg-red-100 rounded-t-xl\">\r\n        <Title>ToDo Zoznam</Title>\r\n      </div>\r\n      <div className=\"bg-white flex flex-row text-gray-400  items-center\">\r\n        <ToggleButtonGroup\r\n          value={filter}\r\n          exclusive\r\n          onChange={handleFilter}\r\n          color=\"primary\"\r\n          aria-label=\"filter items\"\r\n        >\r\n          <ToggleButton value={-1}>All</ToggleButton>\r\n          <ToggleButton value={1}>Done</ToggleButton>\r\n          <ToggleButton value={0}>not Done</ToggleButton>\r\n        </ToggleButtonGroup>\r\n        <div className=\"flex-1 p-2 w-full\">\r\n          <Input\r\n            type=\"search\"\r\n            placeholder=\"Search\"\r\n            value={input}\r\n            onChange={(event) => setInput(event.target.value)}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"bg-blue-200 max-h-custom object-contain px-4 border-green-400 overflow-y-scroll\">\r\n        {loading && <p>Loading data ...</p>}\r\n        {renderedItems()}\r\n        <p>Add new ToDo</p>\r\n      </div>\r\n      <div>\r\n        <NewItemForm url={itemUrl} formFun={handlePost} />\r\n      </div>\r\n    </div >\r\n  );\r\n}\r\n// state handlers\r\n//TODO could be inproved using Redux\r\n\r\n\r\nexport default List;","\r\n\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport List from \"./components/List\";\r\n\r\nconst Header = styled.header`\r\nbackground-image: linear-gradient(\r\n  to bottom right,\r\n  rgb(206, 104, 104),\r\n  rgb(243, 243, 116)\r\n);\r\nmin-height: 100vh;\r\ndisplay: flex;\r\nflex-direction: column;\r\nalign-items: center;\r\njustify-content: center;\r\nfont-size: calc(10px + 2vmin);\r\ncolor: white;\r\n`;\r\n\r\nconst App: React.FC = () => {\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Header>\r\n        <List />\r\n      </Header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals'\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry)\r\n      getFID(onPerfEntry)\r\n      getFCP(onPerfEntry)\r\n      getLCP(onPerfEntry)\r\n      getTTFB(onPerfEntry)\r\n    })\r\n  }\r\n}\r\n\r\nexport default reportWebVitals\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}